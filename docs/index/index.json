{"interfaceLanguages":{"swift":[{"children":[{"title":"Essentials","type":"groupMarker"},{"children":[{"title":"UseHooks","type":"groupMarker"},{"path":"\/tutorials\/docchooks\/usehooks","title":"UseHooks","type":"project"},{"title":"UseState","type":"groupMarker"},{"path":"\/tutorials\/docchooks\/usestate","title":"UseState","type":"project"}],"path":"\/tutorials\/meethooks","title":"Meet Hooks API","type":"overview"},{"path":"\/documentation\/docchooks\/todohookbasic","title":"TodoHookBasic App","type":"sampleCode"},{"path":"\/documentation\/docchooks\/todohooknetwork","title":"TodoHookNetwork App","type":"sampleCode"},{"path":"\/documentation\/docchooks\/todohookadvance","title":"TodoHookAdvance App","type":"sampleCode"},{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/docchooks\/beforestarted","title":"Before Started","type":"article"},{"path":"\/documentation\/docchooks\/buildingyourownhooks","title":"Building Your OwnHooks","type":"article"},{"path":"\/documentation\/docchooks\/gettingstarted","title":"Getting Started with Hooks","type":"article"},{"path":"\/documentation\/docchooks\/introduction","title":"Introduction","type":"article"},{"path":"\/documentation\/docchooks\/ruleshooks","title":"RulesHooks","type":"article"},{"path":"\/documentation\/docchooks\/shouldweusinghooks","title":"Should We Using Hooks","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/docchooks\/anyref\/init(value:)","title":"init(value: Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/docchooks\/anyref\/value","title":"var value: Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/docchooks\/anyref\/send(_:)","title":"func send(Value)","type":"method"}],"path":"\/documentation\/docchooks\/anyref","title":"AnyRef","type":"class"},{"path":"\/documentation\/docchooks\/refbase","title":"RefBase","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/docchooks\/hcontext\/init(wrappedvalue:)-4ln56","title":"init(wrappedValue: HContext<Node>.Context.Type)","type":"init"},{"path":"\/documentation\/docchooks\/hcontext\/init(wrappedvalue:)-7bbpe","title":"init(wrappedValue: () -> HContext<Node>.Context.Type)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/docchooks\/hcontext\/projectedvalue","title":"var projectedValue: HContext<Node>","type":"property"},{"path":"\/documentation\/docchooks\/hcontext\/value","title":"var value: Node","type":"property"},{"path":"\/documentation\/docchooks\/hcontext\/wrappedvalue","title":"var wrappedValue: HContext<Node>.Context.Type","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/docchooks\/hcontext\/context","title":"HContext.Context","type":"typealias"}],"path":"\/documentation\/docchooks\/hcontext","title":"HContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/docchooks\/hcountdown\/init(wrappedvalue:withtimeinterval:)","title":"init(wrappedValue: Double, withTimeInterval: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/docchooks\/hcountdown\/projectedvalue","title":"var projectedValue: HCountdown","type":"property"},{"path":"\/documentation\/docchooks\/hcountdown\/value","title":"var value: HookCountdownState","type":"property"},{"path":"\/documentation\/docchooks\/hcountdown\/withtimeinterval","title":"var withTimeInterval: Double","type":"property"},{"path":"\/documentation\/docchooks\/hcountdown\/wrappedvalue","title":"var wrappedValue: Double","type":"property"}],"path":"\/documentation\/docchooks\/hcountdown","title":"HCountdown","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/docchooks\/henvironment\/init(_:)","title":"init(KeyPath<EnvironmentValues, Value>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/docchooks\/henvironment\/projectedvalue","title":"var projectedValue: HEnvironment<Value>","type":"property"},{"path":"\/documentation\/docchooks\/henvironment\/value","title":"var value: Value","type":"property"},{"path":"\/documentation\/docchooks\/henvironment\/wrappedvalue","title":"var wrappedValue: Value","type":"property"}],"path":"\/documentation\/docchooks\/henvironment","title":"HEnvironment","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/docchooks\/hmemo\/init(wrappedvalue:_:)-4hxy4","title":"init(wrappedValue: Node, HookUpdateStrategy)","type":"init"},{"path":"\/documentation\/docchooks\/hmemo\/init(wrappedvalue:_:)-81bqb","title":"init(wrappedValue: () -> Node, HookUpdateStrategy)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/docchooks\/hmemo\/projectedvalue","title":"var projectedValue: HMemo<Node>","type":"property"},{"path":"\/documentation\/docchooks\/hmemo\/value","title":"var value: Node","type":"property"},{"path":"\/documentation\/docchooks\/hmemo\/wrappedvalue","title":"var wrappedValue: Node","type":"property"}],"path":"\/documentation\/docchooks\/hmemo","title":"HMemo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/docchooks\/href\/init(wrappedvalue:)-2jhie","title":"init(wrappedValue: Node)","type":"init"},{"path":"\/documentation\/docchooks\/href\/init(wrappedvalue:)-4ocef","title":"init(wrappedValue: () -> Node)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/docchooks\/href\/projectedvalue","title":"var projectedValue: HRef<Node>","type":"property"},{"path":"\/documentation\/docchooks\/href\/value","title":"var value: RefObject<Node>","type":"property"},{"path":"\/documentation\/docchooks\/href\/wrappedvalue","title":"var wrappedValue: Node","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/docchooks\/href\/onupdated(_:)","title":"func onUpdated((Node) -> Void) -> HRef<Node>","type":"method"},{"path":"\/documentation\/docchooks\/href\/send(_:)","title":"func send(Node)","type":"method"}],"path":"\/documentation\/docchooks\/href","title":"HRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/docchooks\/hstate\/init(wrappedvalue:)-1a7he","title":"init(wrappedValue: () -> Node)","type":"init"},{"path":"\/documentation\/docchooks\/hstate\/init(wrappedvalue:)-2lyzh","title":"init(wrappedValue: Node)","type":"init"},{"path":"\/documentation\/docchooks\/hstate\/init(wrappedvalue:)-2m2t9","title":"init(wrappedValue: () -> Binding<Node>)","type":"init"},{"path":"\/documentation\/docchooks\/hstate\/init(wrappedvalue:)-5km1w","title":"init(wrappedValue: Binding<Node>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/docchooks\/hstate\/projectedvalue","title":"var projectedValue: Binding<Node>","type":"property"},{"path":"\/documentation\/docchooks\/hstate\/wrappedvalue","title":"var wrappedValue: Node","type":"property"}],"path":"\/documentation\/docchooks\/hstate","title":"HState","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/docchooks\/hookcountdownstate\/cancel","title":"var cancel: () -> ()","type":"property"},{"path":"\/documentation\/docchooks\/hookcountdownstate\/isautocountdown","title":"let isAutoCountdown: Binding<Bool>","type":"property"},{"path":"\/documentation\/docchooks\/hookcountdownstate\/phase","title":"var phase: Binding<HookCountdownState.CountdownPhase>","type":"property"},{"path":"\/documentation\/docchooks\/hookcountdownstate\/play","title":"var play: () -> ()","type":"property"},{"path":"\/documentation\/docchooks\/hookcountdownstate\/start","title":"var start: () -> ()","type":"property"},{"path":"\/documentation\/docchooks\/hookcountdownstate\/stop","title":"var stop: () -> ()","type":"property"},{"path":"\/documentation\/docchooks\/hookcountdownstate\/value","title":"let value: Binding<Double>","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/docchooks\/hookcountdownstate\/countdownphase\/cancel","title":"case cancel","type":"case"},{"path":"\/documentation\/docchooks\/hookcountdownstate\/countdownphase\/completion","title":"case completion","type":"case"},{"path":"\/documentation\/docchooks\/hookcountdownstate\/countdownphase\/pending","title":"case pending","type":"case"},{"path":"\/documentation\/docchooks\/hookcountdownstate\/countdownphase\/process(_:)","title":"case process(Double)","type":"case"},{"path":"\/documentation\/docchooks\/hookcountdownstate\/countdownphase\/start(_:)","title":"case start(Double)","type":"case"},{"path":"\/documentation\/docchooks\/hookcountdownstate\/countdownphase\/stop","title":"case stop","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/docchooks\/hookcountdownstate\/countdownphase\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/docchooks\/hookcountdownstate\/countdownphase\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/docchooks\/hookcountdownstate\/countdownphase","title":"HookCountdownState.CountdownPhase","type":"enum"}],"path":"\/documentation\/docchooks\/hookcountdownstate","title":"HookCountdownState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/docchooks\/mhstate\/init(wrappedvalue:)-5zxf1","title":"init(wrappedValue: Node)","type":"init"},{"path":"\/documentation\/docchooks\/mhstate\/init(wrappedvalue:)-6bcz1","title":"init(wrappedValue: Binding<Node>)","type":"init"},{"path":"\/documentation\/docchooks\/mhstate\/init(wrappedvalue:)-97irh","title":"init(wrappedValue: () -> Node)","type":"init"},{"path":"\/documentation\/docchooks\/mhstate\/init(wrappedvalue:)-9ldm6","title":"init(wrappedValue: () -> Binding<Node>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/docchooks\/mhstate\/binding","title":"var binding: Binding<Node>","type":"property"},{"path":"\/documentation\/docchooks\/mhstate\/projectedvalue","title":"var projectedValue: MHState<Node>","type":"property"},{"path":"\/documentation\/docchooks\/mhstate\/value","title":"var value: Binding<Node>","type":"property"},{"path":"\/documentation\/docchooks\/mhstate\/wrappedvalue","title":"var wrappedValue: Node","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/docchooks\/mhstate\/onchange(_:)","title":"func onChange((Node) -> Void) -> MHState<Node>","type":"method"},{"path":"\/documentation\/docchooks\/mhstate\/send(_:)","title":"func send(Node)","type":"method"}],"path":"\/documentation\/docchooks\/mhstate","title":"MHState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/docchooks\/sanyref\/init(wrappedvalue:)-2srti","title":"init(wrappedValue: () -> Node)","type":"init"},{"path":"\/documentation\/docchooks\/sanyref\/init(wrappedvalue:)-3jz7f","title":"init(wrappedValue: Node)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/docchooks\/sanyref\/projectedvalue","title":"var projectedValue: SAnyRef<Node>","type":"property"},{"path":"\/documentation\/docchooks\/sanyref\/value","title":"var value: Node","type":"property"},{"path":"\/documentation\/docchooks\/sanyref\/wrappedvalue","title":"var wrappedValue: Node","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/docchooks\/sanyref\/subscript(dynamicmember:)","title":"subscript<Value>(dynamicMember _: WritableKeyPath<Node, Value>) -> Value","type":"subscript"}],"path":"\/documentation\/docchooks\/sanyref","title":"SAnyRef","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/docchooks\/useasyncrefresh(_:)-3pu3z","title":"func useAsyncRefresh<Output>(() async -> Output) -> (phase: AsyncPhase<Output, Never>, refresh: () async -> Void)","type":"func"},{"path":"\/documentation\/docchooks\/useasyncrefresh(_:)-5h1m2","title":"func useAsyncRefresh<Output>(() async throws -> Output) -> (phase: AsyncPhase<Output, Error>, refresh: () async -> Void)","type":"func"},{"path":"\/documentation\/docchooks\/useasyncsequence(_:_:)-2tb70","title":"func useAsyncSequence<Output>(HookUpdateStrategy?, AsyncStream<Output>) -> AsyncPhase<Output, Never>","type":"func"},{"path":"\/documentation\/docchooks\/useasyncsequence(_:_:)-7sq73","title":"func useAsyncSequence<Output>(HookUpdateStrategy?, () -> AsyncStream<Output>) -> AsyncPhase<Output, Never>","type":"func"},{"path":"\/documentation\/docchooks\/useasyncthrowingsequence(_:_:)-5bbcb","title":"func useAsyncThrowingSequence<Output>(HookUpdateStrategy?, AsyncThrowingStream<Output, Error>) -> AsyncPhase<Output, Error>","type":"func"},{"path":"\/documentation\/docchooks\/useasyncthrowingsequence(_:_:)-8wcpy","title":"func useAsyncThrowingSequence<Output>(HookUpdateStrategy?, () -> AsyncThrowingStream<Output, Error>) -> AsyncPhase<Output, Error>","type":"func"},{"path":"\/documentation\/docchooks\/usecount(_:)","title":"func useCount(HookUpdateStrategy) -> Int","type":"func"},{"path":"\/documentation\/docchooks\/usecountdown(countdown:withtimeinterval:)","title":"func useCountdown(countdown: Double, withTimeInterval: TimeInterval) -> HookCountdownState","type":"func"},{"path":"\/documentation\/docchooks\/usedate()","title":"func useDate() -> Date?","type":"func"},{"path":"\/documentation\/docchooks\/usedate(date:)","title":"func useDate(date: Date) -> Date?","type":"func"},{"path":"\/documentation\/docchooks\/useflagupdated(_:)","title":"func useFlagUpdated(Bool?) -> Bool","type":"func"},{"path":"\/documentation\/docchooks\/usenextphasevalue(_:)","title":"func useNextPhaseValue<Success, Failure>(AsyncPhase<Success, Failure>) -> Success?","type":"func"},{"path":"\/documentation\/docchooks\/usephasedate()","title":"func usePhaseDate() -> AsyncPhase<Date, Never>","type":"func"},{"path":"\/documentation\/docchooks\/usephasedate(date:)","title":"func usePhaseDate(date: Date) -> AsyncPhase<Date, Never>","type":"func"},{"path":"\/documentation\/docchooks\/usevaluechanged(_:callback:)","title":"func useValueChanged<Node>(Node, callBack: (Node, Node) -> Void) -> Node","type":"func"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/docchooks\/hooks\/asyncphase\/hasresponded","title":"var hasResponded: Bool","type":"property"},{"path":"\/documentation\/docchooks\/hooks\/asyncphase\/isloading","title":"var isLoading: Bool","type":"property"},{"path":"\/documentation\/docchooks\/hooks\/asyncphase\/status","title":"var status: AsyncPhase<Success, Failure>.StatusPhase","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/docchooks\/hooks\/asyncphase\/statusphase\/failure","title":"case failure","type":"case"},{"path":"\/documentation\/docchooks\/hooks\/asyncphase\/statusphase\/pending","title":"case pending","type":"case"},{"path":"\/documentation\/docchooks\/hooks\/asyncphase\/statusphase\/running","title":"case running","type":"case"},{"path":"\/documentation\/docchooks\/hooks\/asyncphase\/statusphase\/success","title":"case success","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/docchooks\/hooks\/asyncphase\/statusphase\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/docchooks\/hooks\/asyncphase\/statusphase\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/docchooks\/hooks\/asyncphase\/statusphase","title":"AsyncPhase.StatusPhase","type":"enum"}],"path":"\/documentation\/docchooks\/hooks\/asyncphase","title":"AsyncPhase","type":"extension"}],"path":"\/documentation\/docchooks\/hooks","title":"Hooks","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/docchooks\/_concurrency\/task\/sleep(seconds:)","title":"static func sleep(seconds: Double) async throws","type":"method"}],"path":"\/documentation\/docchooks\/_concurrency\/task","title":"Task","type":"extension"}],"path":"\/documentation\/docchooks\/_concurrency","title":"_Concurrency","type":"extension"}],"icon":"slothCreator-icon.png","path":"\/documentation\/docchooks","title":"DocCHooks","type":"module"}]},"references":{"slothCreator-icon.png":{"alt":"A technology icon representing the SlothCreator framework.","identifier":"slothCreator-icon.png","type":"image","variants":[{"traits":["2x","light"],"url":"\/images\/slothCreator-icon@2x.png"}]}},"schemaVersion":{"major":0,"minor":1,"patch":1}}