{"variants":[{"paths":["\/tutorials\/docchooks\/usehooks"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Slothy"}]},{"type":"text","text":" — an app for creating and caring for custom sloths. You’ll start by building the sloth creation view."}]}],"estimatedTimeInMinutes":10,"title":"UseHooks","image":"creating-intro.png","chapter":"UseHooks","kind":"hero","backgroundImage":"creating-intro.png"},{"kind":"tasks","tasks":[{"anchor":"Create-a-new-project-and-add-SlothCreator","title":"Create a new project and add SlothCreator","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create and configure an Xcode project that uses SlothCreator."}]}],"mediaPosition":"trailing","media":"01-creating-section1.png"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new project using the iOS App template."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"placeholder-image.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Enter “Slothy” as the Product Name."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"placeholder-image.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select “SwiftUI” from the Interface pop-up menu and “SwiftUI App” from the Life Cycle pop-up menu, then click Next. Choose a location to save the Slothy project on your Mac."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"placeholder-image.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"SlothCreator"},{"type":"text","text":" as a dependency to the project."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"placeholder-image.png"}]},{"anchor":"Add-a-customization-view","title":"Add a customization view","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the ability for users to customize sloths and select their powers."}]}],"mediaPosition":"trailing","media":"01-creating-section2.png"}],"stepsSection":[{"code":"01-creating-code-02-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new SwiftUI View file named "},{"type":"codeVoice","code":"CustomizedSlothView.swift"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":"preview-01-creating-code-02-01.png","media":null},{"code":"01-creating-code-02-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Import the "},{"type":"codeVoice","code":"SlothCreator"},{"type":"text","text":" package."}]}],"caption":[],"type":"step","runtimePreview":"preview-01-creating-code-02-01.png","media":null},{"code":"01-creating-code-02-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a state variable called "},{"type":"codeVoice","code":"sloth"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":"preview-01-creating-code-02-01.png","media":null},{"code":"01-creating-code-02-04.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Delete the template "},{"type":"codeVoice","code":"Text"},{"type":"text","text":" view, then add a new "},{"type":"codeVoice","code":"VStack"},{"type":"text","text":" with trailing padding."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This adds space around and between any views inside."}]}],"type":"step","runtimePreview":"preview-01-creating-code-02-04.png","media":null},{"code":"01-creating-code-02-05.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a "},{"type":"codeVoice","code":"SlothView"},{"type":"text","text":". Specify the "},{"type":"codeVoice","code":"sloth"},{"type":"text","text":" state variable for the view’s "},{"type":"codeVoice","code":"sloth"},{"type":"text","text":" binding."}]}],"caption":[],"type":"step","runtimePreview":"preview-01-creating-code-02-04.png","media":null},{"code":"01-creating-code-02-06.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a "},{"type":"codeVoice","code":"PowerPicker"},{"type":"text","text":". Specify the "},{"type":"codeVoice","code":"sloth"},{"type":"text","text":"‘s "},{"type":"codeVoice","code":"power"},{"type":"text","text":" for the picker view’s "},{"type":"codeVoice","code":"power"},{"type":"text","text":" binding."}]}],"caption":[],"type":"step","runtimePreview":"preview-01-creating-code-02-04.png","media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following steps display your customized sloth view in the SwiftUI preview."}]},{"code":"01-creating-code-02-07.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the "},{"type":"codeVoice","code":"sloth"},{"type":"text","text":" parameter to initialize the "},{"type":"codeVoice","code":"CustomizedSlothView"},{"type":"text","text":" in the preview provider, and pass a new "},{"type":"codeVoice","code":"Sloth"},{"type":"text","text":" instance for the value."}]}],"caption":[],"type":"step","runtimePreview":"preview-01-creating-code-02-07.png","media":null},{"code":"01-creating-code-02-08.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Set the preview provider sloth’s "},{"type":"codeVoice","code":"name"},{"type":"text","text":" to "},{"type":"codeVoice","code":"\"Super Sloth\""},{"type":"text","text":", "},{"type":"codeVoice","code":"color"},{"type":"text","text":" to "},{"type":"codeVoice","code":".blue"},{"type":"text","text":", and "},{"type":"codeVoice","code":"power"},{"type":"text","text":" to "},{"type":"codeVoice","code":".ice"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":"preview-01-creating-code-02-08.png","media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/DocCHooks\/tutorials\/DocCHooks\/UseState","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"UseState","abstract":[{"type":"text","text":"This tutorial guides you through building Basic Logic"}]}],"identifier":{"url":"doc:\/\/DocCHooks\/tutorials\/DocCHooks\/UseHooks","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"UseHooks","categoryPathComponent":"MeetHooks","role":"project","category":"The Hooks"},"hierarchy":{"modules":[{"reference":"doc:\/\/DocCHooks\/tutorials\/MeetHooks\/UseHooks","projects":[{"reference":"doc:\/\/DocCHooks\/tutorials\/DocCHooks\/UseHooks","sections":[{"kind":"task","reference":"doc:\/\/DocCHooks\/tutorials\/DocCHooks\/UseHooks#Create-a-new-project-and-add-SlothCreator"},{"kind":"task","reference":"doc:\/\/DocCHooks\/tutorials\/DocCHooks\/UseHooks#Add-a-customization-view"}]}]},{"reference":"doc:\/\/DocCHooks\/tutorials\/MeetHooks\/UseState","projects":[{"reference":"doc:\/\/DocCHooks\/tutorials\/DocCHooks\/UseState","sections":[{"kind":"task","reference":"doc:\/\/DocCHooks\/tutorials\/DocCHooks\/UseState#Basic-Logic"}]}]}],"reference":"doc:\/\/DocCHooks\/tutorials\/MeetHooks","paths":[["doc:\/\/DocCHooks\/tutorials\/MeetHooks","doc:\/\/DocCHooks\/tutorials\/MeetHooks\/$volume","doc:\/\/DocCHooks\/tutorials\/MeetHooks\/UseHooks"]]},"references":{"doc://DocCHooks/tutorials/DocCHooks/UseHooks":{"role":"project","title":"UseHooks","estimatedTime":"10min","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Slothy"}]},{"type":"text","text":" — an app for creating and caring for custom sloths. You’ll start by building the sloth creation view."}],"identifier":"doc:\/\/DocCHooks\/tutorials\/DocCHooks\/UseHooks","kind":"project","type":"topic","url":"\/tutorials\/docchooks\/usehooks"},"01-creating-code-02-02.swift":{"syntax":"swift","content":["import SwiftUI","import IdentifiedCollections","import Hooks","","private struct Todo: Hashable, Identifiable {","  var id: UUID","  var text: String","  var isCompleted: Bool","}","","\/\/ MARK: Mock Data","extension IdentifiedArray where ID == Todo.ID, Element == Todo {","  static let mock: Self = [","    Todo(","      id: UUID(),","      text: \"A\",","      isCompleted: false","    ),","    Todo(","      id: UUID(),","      text: \"B\",","      isCompleted: true","    ),","    Todo(","      id: UUID(),","      text: \"C\",","      isCompleted: false","    ),","    Todo(","      id: UUID(),","      text: \"D\",","      isCompleted: true","    ),","  ]","}"],"fileName":"CustomizedSlothView.swift","identifier":"01-creating-code-02-02.swift","type":"file","fileType":"swift","highlights":[{"line":2},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35}]},"doc://DocCHooks/tutorials/DocCHooks/UseHooks#Add-a-customization-view":{"role":"pseudoSymbol","title":"Add a customization view","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Slothy"}]},{"type":"text","text":" — an app for creating and caring for custom sloths. You’ll start by building the sloth creation view."}],"identifier":"doc:\/\/DocCHooks\/tutorials\/DocCHooks\/UseHooks#Add-a-customization-view","kind":"section","type":"section","url":"\/tutorials\/docchooks\/usehooks#Add-a-customization-view"},"01-creating-code-02-06.swift":{"syntax":"swift","content":["import SwiftUI","import Hooks","","struct HookState: View {","  ","  var body: some View {","    HookScope {","      let count = useState(0)","      ","      let text = useState(\"\")","      ","      let color = useMemo(.preserved(by: count.wrappedValue)) {","        UIColor(","          red: .random(in: 0...1),","          green: .random(in: 0...1),","          blue: .random(in: 0...1)","        )","      }","      ","      VStack {","        Stepper(\"\", value: count)","        ","        TextField(\"\", text: text)","        ","        color","      }","    }","  }","}"],"fileName":"CustomizedSlothView.swift","identifier":"01-creating-code-02-06.swift","type":"file","fileType":"swift","highlights":[{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":24},{"line":25}]},"preview-01-creating-code-02-04.png":{"alt":"A screenshot of a blank preview canvas.","type":"image","identifier":"preview-01-creating-code-02-04.png","variants":[{"url":"\/images\/preview-01-creating-code-02-04.png","traits":["1x","light"]},{"url":"\/images\/preview-01-creating-code-02-04@2x.png","traits":["2x","light"]},{"url":"\/images\/preview-01-creating-code-02-04~dark@2x.png","traits":["2x","dark"]}]},"01-creating-code-02-03.swift":{"syntax":"swift","content":["import SwiftUI","import IdentifiedCollections","import Hooks","","private struct Todo: Hashable, Identifiable {","  var id: UUID","  var text: String","  var isCompleted: Bool","}","","\/\/ MARK: Mock Data","extension IdentifiedArray where ID == Todo.ID, Element == Todo {","  static let mock: Self = [","    Todo(","      id: UUID(),","      text: \"A\",","      isCompleted: false","    ),","    Todo(","      id: UUID(),","      text: \"B\",","      isCompleted: true","    ),","    Todo(","      id: UUID(),","      text: \"C\",","      isCompleted: false","    ),","    Todo(","      id: UUID(),","      text: \"D\",","      isCompleted: true","    ),","  ]","}","","struct ExamplesView: View {","  ","  var body: some View {","    HookScope {","      @HState","      var todos: IdentifiedArrayOf<Todo> = .mock","      List {","        ForEach(todos) { item in","          ","        }","      }","    }","  }","}"],"fileName":"CustomizedSlothView.swift","identifier":"01-creating-code-02-03.swift","type":"file","fileType":"swift","highlights":[{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48},{"line":49},{"line":50}]},"doc://DocCHooks/tutorials/MeetHooks":{"role":"overview","title":"Meet Hooks API","abstract":[{"type":"text","text":"A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"identifier":"doc:\/\/DocCHooks\/tutorials\/MeetHooks","kind":"overview","type":"topic","url":"\/tutorials\/meethooks"},"doc://DocCHooks/tutorials/MeetHooks/UseState":{"role":"article","title":"UseState","abstract":[],"identifier":"doc:\/\/DocCHooks\/tutorials\/MeetHooks\/UseState","kind":"article","type":"topic","url":"\/tutorials\/meethooks\/usestate"},"doc://DocCHooks/tutorials/DocCHooks/UseHooks#Create-a-new-project-and-add-SlothCreator":{"role":"pseudoSymbol","title":"Create a new project and add SlothCreator","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Slothy"}]},{"type":"text","text":" — an app for creating and caring for custom sloths. You’ll start by building the sloth creation view."}],"identifier":"doc:\/\/DocCHooks\/tutorials\/DocCHooks\/UseHooks#Create-a-new-project-and-add-SlothCreator","kind":"section","type":"section","url":"\/tutorials\/docchooks\/usehooks#Create-a-new-project-and-add-SlothCreator"},"doc://DocCHooks/tutorials/DocCHooks/UseState":{"role":"project","title":"UseState","estimatedTime":"10min","abstract":[{"type":"text","text":"This tutorial guides you through building Basic Logic"}],"identifier":"doc:\/\/DocCHooks\/tutorials\/DocCHooks\/UseState","kind":"project","type":"topic","url":"\/tutorials\/docchooks\/usestate"},"preview-01-creating-code-02-08.png":{"alt":"A portrait of an ice sloth on top, followed by four power icons below. The power icons, clockwise from top left, include: ice, fire, wind, and lightning. The ice icon is selected.","type":"image","identifier":"preview-01-creating-code-02-08.png","variants":[{"url":"\/images\/preview-01-creating-code-02-08.png","traits":["1x","light"]},{"url":"\/images\/preview-01-creating-code-02-08@2x.png","traits":["2x","light"]},{"url":"\/images\/preview-01-creating-code-02-08~dark@2x.png","traits":["2x","dark"]}]},"placeholder-image.png":{"alt":"A screenshot shows the SlothCreator package in Xcode's navigator.","type":"image","identifier":"placeholder-image.png","variants":[{"url":"\/images\/placeholder-image@2x.png","traits":["2x","light"]},{"url":"\/images\/placeholder-image~dark@2x.png","traits":["2x","dark"]}]},"01-creating-code-02-07.swift":{"syntax":"swift","content":["import SwiftUI","import Hooks","","struct HookState: View {","  ","  @State var count = 0","  ","  @Binding var text = \"\"","  ","  var body: some View {","    VStack {","      Stepper(\"\", value: $count)","      ","      TextField(\"\", text: $text)","    }","  }","}"],"fileName":"CustomizedSlothView.swift","identifier":"01-creating-code-02-07.swift","type":"file","fileType":"swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":9},{"line":11},{"line":12},{"line":14}]},"doc://DocCHooks/tutorials/DocCHooks/UseState#Basic-Logic":{"role":"pseudoSymbol","title":"Basic Logic","abstract":[{"type":"text","text":"This tutorial guides you through building Basic Logic"}],"identifier":"doc:\/\/DocCHooks\/tutorials\/DocCHooks\/UseState#Basic-Logic","kind":"section","type":"section","url":"\/tutorials\/docchooks\/usestate#Basic-Logic"},"preview-01-creating-code-02-07.png":{"alt":"A portrait of a generic sloth displayed in the center of the canvas.","type":"image","identifier":"preview-01-creating-code-02-07.png","variants":[{"url":"\/images\/preview-01-creating-code-02-07.png","traits":["1x","light"]},{"url":"\/images\/preview-01-creating-code-02-07@2x.png","traits":["2x","light"]},{"url":"\/images\/preview-01-creating-code-02-07~dark@2x.png","traits":["2x","dark"]}]},"01-creating-code-02-04.swift":{"syntax":"swift","content":["import SwiftUI","import IdentifiedCollections","import Hooks","","private struct Todo: Hashable, Identifiable {","  var id: UUID","  var text: String","  var isCompleted: Bool","}","","\/\/ MARK: Mock Data","extension IdentifiedArray where ID == Todo.ID, Element == Todo {","  static let mock: Self = [","    Todo(","      id: UUID(),","      text: \"A\",","      isCompleted: false","    ),","    Todo(","      id: UUID(),","      text: \"B\",","      isCompleted: true","    ),","    Todo(","      id: UUID(),","      text: \"C\",","      isCompleted: false","    ),","    Todo(","      id: UUID(),","      text: \"D\",","      isCompleted: true","    ),","  ]","}","","struct ExamplesView: View {","  var body: some View {","    HookScope {","      @HState","      var todos: IdentifiedArrayOf<Todo> = .mock","      List {","        ForEach(todos) { item in","          HookScope {","            @HState var iscollapsed = true","            ","            let (phase, perform) = useAsyncRefresh { () -> Int in","              try? await Task.sleep(seconds: 2)","              return Int.random(in: 1...100)","            }","            let _ = useLayoutEffect(.preserved(by: iscollapsed)) {","              if !iscollapsed {","                Task { await perform() }","                print(\"Call Perform\")","              }","              return nil","            }","            ","            VStack {","              HStack {","                Text(item.text)","                Color.white.opacity(0.01)","              }","              .onTapGesture {","                withAnimation {","                  iscollapsed.toggle()","                }","              }","              ","              if !iscollapsed {","                switch phase {","                  case .success(let value):","                    Text(value.description)","                  default:","                    ProgressView()","                }","              }","            }","          }","        }","      }","    }","  }","}","","#Preview {","  ExamplesView()","}"],"fileName":"CustomizedSlothView.swift","identifier":"01-creating-code-02-04.swift","type":"file","fileType":"swift","highlights":[{"line":44},{"line":45},{"line":46},{"line":47},{"line":48},{"line":49},{"line":50},{"line":51},{"line":52},{"line":53},{"line":54},{"line":55},{"line":56},{"line":57},{"line":58},{"line":59},{"line":60},{"line":61},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66},{"line":67},{"line":68},{"line":69},{"line":70},{"line":71},{"line":72},{"line":73},{"line":74},{"line":75},{"line":76},{"line":77},{"line":78},{"line":79},{"line":85},{"line":86},{"line":87},{"line":88}]},"01-creating-code-02-08.swift":{"syntax":"swift","content":["import SwiftUI","import Hooks","","struct HookState: View {","  ","  @State var count = 0","  ","  @Binding var text = \"\"","  ","  var body: some View {","    VStack {","      Stepper(\"\", value: $count)","      ","      TextField(\"\", text: $text)","    }","  }","}"],"fileName":"CustomizedSlothView.swift","identifier":"01-creating-code-02-08.swift","type":"file","fileType":"swift","highlights":[]},"01-creating-section1.png":{"alt":"An arrow pointing from the SlothCreator framework icon to the Xcode app project icon.","type":"image","identifier":"01-creating-section1.png","variants":[{"url":"\/images\/01-creating-section1@2x.png","traits":["2x","light"]},{"url":"\/images\/01-creating-section1~dark@2x.png","traits":["2x","dark"]}]},"preview-01-creating-code-02-01.png":{"alt":"A screenshot from the Xcode preview as it would appear on iPhone, with the text, Hello, World!, centered in the middle of the display.","type":"image","identifier":"preview-01-creating-code-02-01.png","variants":[{"url":"\/images\/preview-01-creating-code-02-01.png","traits":["1x","light"]},{"url":"\/images\/preview-01-creating-code-02-01@2x.png","traits":["2x","light"]},{"url":"\/images\/preview-01-creating-code-02-01~dark@2x.png","traits":["2x","dark"]}]},"creating-intro.png":{"alt":"A wireframe of an app interface that has an outline of a sloth and four buttons below the sloth. The buttons display the following symbols, from left to right: ice, fire, wind, and lightning.","type":"image","identifier":"creating-intro.png","variants":[{"url":"\/images\/creating-intro@2x.png","traits":["2x","light"]}]},"01-creating-code-02-01.swift":{"syntax":"swift","content":["import SwiftUI","import Hooks","","private struct Todo: Hashable, Identifiable {","  var id: UUID","  var text: String","  var isCompleted: Bool","}"],"fileName":"CustomizedSlothView.swift","identifier":"01-creating-code-02-01.swift","type":"file","fileType":"swift","highlights":[]},"doc://DocCHooks/tutorials/MeetHooks/UseHooks":{"role":"article","title":"UseHooks","abstract":[],"identifier":"doc:\/\/DocCHooks\/tutorials\/MeetHooks\/UseHooks","kind":"article","type":"topic","url":"\/tutorials\/meethooks\/usehooks"},"01-creating-section2.png":{"alt":"An outline of a sloth surrounded by four power type icons. The power type icons are arranged in the following order, clockwise from the top: fire, wind, lightning, and ice.","type":"image","identifier":"01-creating-section2.png","variants":[{"url":"\/images\/01-creating-section2@2x.png","traits":["2x","light"]},{"url":"\/images\/01-creating-section2~dark@2x.png","traits":["2x","dark"]}]},"01-creating-code-02-05.swift":{"syntax":"swift","content":["import SwiftUI","import Hooks","","struct HookState: View {","  ","  var body: some View {","    HookScope {","      let count = useState(0)","      ","      let text = useState(\"\")","      VStack {","        Stepper(\"\", value: count)","        ","        TextField(\"\", text: text)","      }","    }","  }","}"],"fileName":"CustomizedSlothView.swift","identifier":"01-creating-code-02-05.swift","type":"file","fileType":"swift","highlights":[{"line":4},{"line":5},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14}]}}}