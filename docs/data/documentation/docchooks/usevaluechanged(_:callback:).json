{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"useValueChanged"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":", "},{"kind":"externalParam","text":"callBack"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Equatable","preciseIdentifier":"s:SQ"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/docchooks\/usevaluechanged(_:callback:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DocCHooks\/documentation\/DocCHooks\/useValueChanged(_:callBack:)","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"useValueChanged"},{"type":"text","text":" can also be used to interpolate Whenever useValueChanged is called with a different value, calls valueChange. The value returned by useValueChanged is the latest returned value of valueChange or null."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"useValueChanged"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":", "},{"kind":"externalParam","text":"callBack"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Node"}],"title":"useValueChanged(_:callBack:)","roleHeading":"Function","role":"symbol","symbolKind":"func","externalID":"s:9DocCHooks15useValueChanged_8callBackxx_yx_xtctSQRzlF","modules":[{"name":"DocCHooks"}]},"hierarchy":{"paths":[["doc:\/\/DocCHooks\/documentation\/DocCHooks"]]},"references":{"doc://DocCHooks/documentation/DocCHooks/useValueChanged(_:callBack:)":{"role":"symbol","title":"useValueChanged(_:callBack:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"useValueChanged"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":", "},{"kind":"externalParam","text":"callBack"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Node"}],"abstract":[{"type":"codeVoice","code":"useValueChanged"},{"type":"text","text":" can also be used to interpolate Whenever useValueChanged is called with a different value, calls valueChange. The value returned by useValueChanged is the latest returned value of valueChange or null."}],"identifier":"doc:\/\/DocCHooks\/documentation\/DocCHooks\/useValueChanged(_:callBack:)","kind":"symbol","type":"topic","url":"\/documentation\/docchooks\/usevaluechanged(_:callback:)"},"doc://DocCHooks/documentation/DocCHooks":{"images":[{"type":"icon","identifier":"slothCreator-icon.png"}],"role":"collection","title":"DocCHooks","abstract":[{"type":"text","text":"A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"identifier":"doc:\/\/DocCHooks\/documentation\/DocCHooks","kind":"symbol","type":"topic","url":"\/documentation\/docchooks"},"slothCreator-icon.png":{"alt":"A technology icon representing the SlothCreator framework.","type":"image","identifier":"slothCreator-icon.png","variants":[{"url":"\/images\/slothCreator-icon@2x.png","traits":["2x","light"]}]}}}