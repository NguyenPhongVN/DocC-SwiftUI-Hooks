{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI Hooks is a SwiftUI implementation of React Hooks. Brings the state and lifecycle into the function view, without depending on elements that are only allowed to be used in struct views such as @State or @ObservedObject."},{"type":"text","text":" "},{"type":"text","text":"It allows you to reuse stateful logic between views by building custom hooks composed with multiple hooks."},{"type":"text","text":" "},{"type":"text","text":"Furthermore, hooks such as useEffect also solve the problem of lack of lifecycles in SwiftUI."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The API and behavioral specs of SwiftUI Hooks are entirely based on React Hooks, so you can leverage your knowledge of web applications to your advantage."}]},{"anchor":"Examples","level":3,"type":"heading","text":"Examples"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Basic Hooks"}]},{"type":"codeListing","syntax":"swift","code":["","func timer() -> some View {","  HookScope {","","    let time = useState(Date())","","    useEffect(.once) {","      let timer = Timer.scheduledTimer(withTimeInterval: 1, repeats: true) {","        time.wrappedValue = $0.fireDate","      }","","      return {","        timer.invalidate()","      }","    }","","    return Text(\"Time: \\(time.wrappedValue)\")","  }","}"]},{"type":"codeListing","syntax":"swift","code":["var contentOther: some View {","  HookScope {","","    let state = useState(0)","","    let otherState = useState {","      0","    }","","    let toggle = useState(false)","","    let _ = useLogger(nil, toggle.wrappedValue)","","    let _ = useLogger(.preserved(by: toggle.wrappedValue), toggle.wrappedValue)","","    VStack {","      Stepper(value: state) {","        Text(state.wrappedValue.description)","      }","","      Stepper(value: otherState) {","        Text(otherState.wrappedValue.description)","      }","","      Toggle(\"\", isOn: toggle)","        .toggleStyle(.switch)","    }","  }","}",""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Advance Hooks"}]},{"type":"codeListing","syntax":"swift","code":["","var content: some View {","  HookScope {","","    @HState var state = 0","","    @HState<Int> var otherState = {","      0","    }","","    @HState var toggle = false","","    @HLogger","    var log = toggle","","    @HLogger(.preserved(by: toggle))","    var otherLog = toggle","","    VStack {","      Stepper(value: $state) {","        Text(state.description)","      }","","      Stepper(value: $otherState) {","        Text(otherState.description)","      }","","      Toggle(\"\", isOn: $toggle)","        .toggleStyle(.switch)","      }","  }","}",""]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/docchooks\/introduction"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DocCHooks\/documentation\/DocCHooks\/Introduction","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"kind":"article","metadata":{"roleHeading":"Article","images":[{"type":"card","identifier":"gettingStarted-card.png"}],"title":"Introduction","role":"article","modules":[{"name":"DocCHooks"}]},"hierarchy":{"paths":[["doc:\/\/DocCHooks\/documentation\/DocCHooks"]]},"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/DocCHooks\/documentation\/DocCHooks\/GettingStarted","doc:\/\/DocCHooks\/documentation\/DocCHooks\/TodoSample","doc:\/\/DocCHooks\/documentation\/DocCHooks\/TodoListNetwork","doc:\/\/DocCHooks\/tutorials\/DocCHooks\/UseState"],"generated":true}],"references":{"doc://DocCHooks/documentation/DocCHooks/TodoListNetwork":{"images":[{"type":"card","identifier":"slothy-card.png"}],"role":"sampleCode","title":"TodoList with Networking App","abstract":[{"type":"text","text":"TodoList into an iOS app for creating todo list."}],"identifier":"doc:\/\/DocCHooks\/documentation\/DocCHooks\/TodoListNetwork","kind":"article","type":"topic","url":"\/documentation\/docchooks\/todolistnetwork"},"slothCreator-icon.png":{"alt":"A technology icon representing the SlothCreator framework.","type":"image","identifier":"slothCreator-icon.png","variants":[{"url":"\/images\/slothCreator-icon@2x.png","traits":["2x","light"]}]},"slothy-card.png":{"alt":"Two screenshots showing the Slothy app. The first screenshot shows a sloth map and the second screenshot shows a sloth power picker.","type":"image","identifier":"slothy-card.png","variants":[{"url":"\/images\/slothy-card@2x.png","traits":["2x","light"]}]},"doc://DocCHooks/tutorials/DocCHooks/UseState":{"role":"project","title":"TodoList","estimatedTime":"10min","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Slothy"}]},{"type":"text","text":" — an app for creating and caring for custom sloths. You’ll start by building the sloth creation view."}],"identifier":"doc:\/\/DocCHooks\/tutorials\/DocCHooks\/UseState","kind":"project","type":"topic","url":"\/tutorials\/docchooks\/usestate"},"gettingStarted-card.png":{"alt":"The profile images for a regular sloth and an ice sloth.","type":"image","identifier":"gettingStarted-card.png","variants":[{"url":"\/images\/gettingStarted-card@2x.png","traits":["2x","light"]}]},"doc://DocCHooks/documentation/DocCHooks":{"images":[{"type":"icon","identifier":"slothCreator-icon.png"}],"role":"collection","title":"DocCHooks","abstract":[{"type":"text","text":"A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"identifier":"doc:\/\/DocCHooks\/documentation\/DocCHooks","kind":"symbol","type":"topic","url":"\/documentation\/docchooks"},"doc://DocCHooks/documentation/DocCHooks/GettingStarted":{"images":[{"type":"card","identifier":"gettingStarted-card.png"}],"role":"article","title":"Getting Started with Hooks","abstract":[{"type":"text","text":"A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"identifier":"doc:\/\/DocCHooks\/documentation\/DocCHooks\/GettingStarted","kind":"article","type":"topic","url":"\/documentation\/docchooks\/gettingstarted"},"doc://DocCHooks/documentation/DocCHooks/TodoSample":{"images":[{"type":"card","identifier":"slothy-card.png"}],"role":"sampleCode","title":"TodoList: App","abstract":[{"type":"text","text":"TodoList into an iOS app for creating todo list."}],"identifier":"doc:\/\/DocCHooks\/documentation\/DocCHooks\/TodoSample","kind":"article","type":"topic","url":"\/documentation\/docchooks\/todosample"}}}