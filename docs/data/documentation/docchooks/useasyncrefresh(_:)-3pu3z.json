{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"useAsyncRefresh"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"operation"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" @"},{"kind":"typeIdentifier","text":"MainActor","preciseIdentifier":"s:ScM"},{"kind":"text","text":" () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> (phase"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncPhase","preciseIdentifier":"s:5Hooks10AsyncPhaseO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">, refresh"},{"kind":"text","text":": @"},{"kind":"typeIdentifier","text":"MainActor","preciseIdentifier":"s:ScM"},{"kind":"text","text":" () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"operation","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that produces a resulting value asynchronously."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A tuple of the most recent async phase and its perform function."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"codeListing","syntax":null,"code":["let (phase, perform) = useAsyncPerform {","    try! await URLSession.shared.data(from: url)","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/docchooks\/useasyncrefresh(_:)-3pu3z"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DocCHooks\/documentation\/DocCHooks\/useAsyncRefresh(_:)-3pu3z","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A hook to use the most recent phase of the passed non-throwing asynchronous operation, and a "},{"type":"codeVoice","code":"perform"},{"type":"text","text":" function to call the it at arbitrary timing."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"useAsyncRefresh"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> (phase"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncPhase","preciseIdentifier":"s:5Hooks10AsyncPhaseO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">, refresh"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"title":"useAsyncRefresh(_:)","roleHeading":"Function","role":"symbol","symbolKind":"func","externalID":"s:9DocCHooks15useAsyncRefreshy5Hooks0D5PhaseOyxs5NeverOG5phase_yyYaScMYcc7refreshtxyYaScMYcclF","modules":[{"name":"DocCHooks"}]},"hierarchy":{"paths":[["doc:\/\/DocCHooks\/documentation\/DocCHooks"]]},"references":{"slothCreator-icon.png":{"alt":"A technology icon representing the SlothCreator framework.","type":"image","identifier":"slothCreator-icon.png","variants":[{"url":"\/images\/slothCreator-icon@2x.png","traits":["2x","light"]}]},"doc://DocCHooks/documentation/DocCHooks/useAsyncRefresh(_:)-3pu3z":{"role":"symbol","title":"useAsyncRefresh(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"useAsyncRefresh"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> (phase"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncPhase","preciseIdentifier":"s:5Hooks10AsyncPhaseO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">, refresh"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"A hook to use the most recent phase of the passed non-throwing asynchronous operation, and a "},{"type":"codeVoice","code":"perform"},{"type":"text","text":" function to call the it at arbitrary timing."}],"identifier":"doc:\/\/DocCHooks\/documentation\/DocCHooks\/useAsyncRefresh(_:)-3pu3z","kind":"symbol","type":"topic","url":"\/documentation\/docchooks\/useasyncrefresh(_:)-3pu3z"},"doc://DocCHooks/documentation/DocCHooks":{"images":[{"type":"icon","identifier":"slothCreator-icon.png"}],"role":"collection","title":"DocCHooks","abstract":[{"type":"text","text":"A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"identifier":"doc:\/\/DocCHooks\/documentation\/DocCHooks","kind":"symbol","type":"topic","url":"\/documentation\/docchooks"}}}